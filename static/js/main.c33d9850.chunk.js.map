{"version":3,"sources":["redux/types.js","redux/actions.js","elements/button.js","elements/item.js","components/toDo.js","components/inTheProcess.js","components/whichIsDid.js","style/switch.less","components/main.js","App.js","redux/postReducer.js","redux/rootReducer.js","index.js","style/main.module.css"],"names":["CREATE_POST","DELETE_POST","MOVE_POST","DID_POSTS","movePost","id","type","payload","Button","text","nameOfClass","clickFunc","className","onClick","mapDispatchToProps","deletePost","connect","moveFunction","information","res","e","preventDefault","state","console","log","posts","length","map","item","i","element","didPost","newPosts","postsWhichIsDid","style","width","createPost","post","props","useState","input","setInput","setId","bg","setBg","check","setCheck","changeBackground","col","document","getElementsByClassName","main","container","prev","setAttribute","removeAttribute","onChange","inputWrapper","name","value","target","placeholder","newObj","wrapper","App","initialState","rootReducer","combineReducers","action","filter","el","elem","find","did","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","app","render","getElementById","module","exports"],"mappings":"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","file":"static/js/main.c33d9850.chunk.js","sourcesContent":["export const CREATE_POST='CREATE_POST';\r\nexport const DELETE_POST='DELETE_POST';\r\nexport const MOVE_POST='MOVE_POST';\r\nexport const DID_POSTS='DID_POSTS';","import {CREATE_POST, DELETE_POST, DID_POSTS, MOVE_POST} from \"./types\";\r\n\r\nexport function createPost(post){\r\n    return{\r\n        type:CREATE_POST,\r\n        payload:post\r\n    }\r\n}\r\nexport function deletePost(id){\r\n    return{\r\n        type:DELETE_POST,\r\n        payload:id\r\n    }\r\n}\r\nexport function movePost(id){\r\n    return{\r\n        type: MOVE_POST,\r\n        payload:id\r\n    }\r\n}\r\nexport function didPost(id){\r\n    return{\r\n        type: DID_POSTS,\r\n        payload:id\r\n    }\r\n}","import React from \"react\";\r\nimport '../style/button.css';\r\nexport default function Button({text, nameOfClass, clickFunc}){\r\n    return(\r\n        <button type=\"button\"\r\n                className={nameOfClass}\r\n                onClick={clickFunc}>\r\n            {text}\r\n        </button>\r\n    )\r\n}","import React from \"react\";\r\nimport {connect} from 'react-redux';\r\nimport {deletePost, movePost} from \"../redux/actions\";\r\nimport Button from \"./button\";\r\n function Item({moveFunction,movePost,deletePost,information}){\r\n    const tobedeleted=(e)=>{\r\n        e.preventDefault();\r\n        deletePost(information.id);\r\n    }\r\n    // const tobemoved=(e)=>{\r\n    //     e.preventDefault();\r\n    //     movePost(information.id);\r\n    // }\r\n    return(\r\n        <div className=\"card\">\r\n                <p className=\"cardText\">{information.res}</p>\r\n                <div className='buttonContainer'>\r\n                    <Button text={'Delete'} nameOfClass={\"but deleteButton\"} clickFunc={tobedeleted}/>\r\n                    <Button text={'Move'} nameOfClass={\"but moveButton\"} clickFunc={moveFunction}/>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\nconst mapDispatchToProps={\r\n     deletePost,\r\n    movePost\r\n}\r\nexport default connect(null, mapDispatchToProps)(Item);\r\n","import React from \"react\";\r\nimport Item from \"../elements/item\";\r\nimport {connect} from \"react-redux\";\r\nimport {movePost} from \"../redux/actions\";\r\n\r\nfunction Todolist({movePost,posts}){\r\n    const tobemoved=(element)=>{\r\n        return function (e){\r\n            e.preventDefault();\r\n            movePost(element.id)\r\n        }\r\n    }\r\n    if(posts.length>0) {\r\n        return (\r\n            <div className=\"colWrapper\">\r\n                <h3>To do</h3>\r\n                <div className=\"list\">\r\n                    {\r\n                        posts.map((item, i) => (\r\n                            <Item key={i} information={item} moveFunction={tobemoved(item)}/>\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    else{\r\n        return (\r\n            <div className=\"colWrapper\">\r\n                <h3>To do</h3>\r\n                <p className=\"noTask\">\r\n                    You have no task to do\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps=(state)=>{\r\n    console.log(state)\r\n    return{\r\n        posts:state.posts.posts\r\n    }\r\n}\r\nconst mapDispatchToProps={\r\n    movePost\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Todolist);","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Item from \"../elements/item\";\r\nimport {didPost} from \"../redux/actions\";\r\nimport Button from \"../elements/button\";\r\n\r\nfunction Intheprocess({didPost,newPosts}){\r\n    const moveToDid=(element)=>{\r\n        return function (e){\r\n            e.preventDefault();\r\n            didPost(element.id)\r\n        }\r\n    }\r\n    if(newPosts.length>=1){\r\n        return(\r\n            <div className=\"colWrapper\">\r\n                <h3>In the process</h3>\r\n                <div className=\"list\">\r\n                    {\r\n                        newPosts.map((item, i)=>(\r\n                                <div key={i} className=\"card\">\r\n                                    <p className=\"cardText\">{item.res}</p>\r\n                                    <div className=\"buttonContainer\">\r\n                                        <Button text={'Did'} nameOfClass={\"but moveButton\"} clickFunc={moveToDid(item)}/>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        )\r\n                }\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n        }\r\nelse{\r\n        return(\r\n            <div className=\"colWrapper\">\r\n                <h3>In the process</h3>\r\n                <p className=\"noTask\">There no tasks in the process</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapDispatchToProps={\r\n    didPost\r\n}\r\nconst mapStateToProps=(state)=>{\r\n    return{\r\n        newPosts: state.posts.newPosts\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Intheprocess);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nfunction Whichisdid({postsWhichIsDid}){\r\n    console.log(postsWhichIsDid)\r\n    if(postsWhichIsDid.length>0){\r\n    return(\r\n        <div className=\"colWrapper\">\r\n            <h3>Have done</h3>\r\n                <div className=\"list\">\r\n                    {\r\n                        postsWhichIsDid.map((item,i)=>(\r\n                            <div key={i} className=\"card\" style={{width: 18+'rem'}}>\r\n                                    <p className=\"cardText\">{item.res}</p>\r\n                            </div>))\r\n                        }\r\n                </div>\r\n        </div>\r\n    )}\r\n    else{\r\n        return (\r\n            <div className=\"colWrapper\">\r\n                <h3>Have done</h3>\r\n                <p className=\"noTask\">You haven't done anything yet</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps=(state)=>{\r\n    return{\r\n        postsWhichIsDid:state.posts.postsWhichIsDid\r\n    }\r\n}\r\nexport default connect(mapStateToProps, null)(Whichisdid)","export default __webpack_public_path__ + \"static/media/switch.dc25b110.less\";","import React, {useMemo, useState} from \"react\";\r\nimport Todolist from \"./toDo\";\r\nimport {createPost} from \"../redux/actions\";\r\nimport {connect} from \"react-redux\";\r\nimport Intheprocess from \"./inTheProcess\";\r\nimport Whichisdid from './whichIsDid';\r\nimport main from '../style/main.module.css';\r\nimport Button from \"../elements/button\";\r\nimport Switch from \"../elements/switch\";\r\nimport '../style/switch.css';\r\n\r\nfunction Main(props){\r\n\r\n    const[input, setInput]=useState({\r\n        text:''\r\n    })\r\n    const [id, setId]=useState(0);\r\n    const[bg, setBg]=useState(true);\r\n    const [check, setCheck]=useState(true);\r\n    const changeInput=(e)=>{\r\n        const {value}=e.target;\r\n        let i=0;\r\n       setInput((prev)=>({...prev, ...{[e.target.name]:value}}))\r\n    }\r\nlet flag=false;\r\n    let countId=0;\r\n    const addNoteFunc=(e)=>{\r\n        e.preventDefault();\r\n        if(!flag){\r\n            setId(prev=>prev+1);\r\n            const newObj= {\r\n                id:id,\r\n                res: input.text\r\n            }\r\n            props.createPost(newObj);\r\n        }\r\n    }\r\n\r\n    function changeBackground(){\r\n            let col = document.getElementsByClassName(main.container)[0];\r\n            setBg(prev => !prev);\r\n            (bg === true) ? col.setAttribute('style', 'background: #282A36; transition: background-color .2s ease;') : col.removeAttribute('style');\r\n    }\r\n    const isCheckedFunc=(e)=>{\r\n            setCheck(prev=>!prev);\r\n            if(check===true){\r\n                changeBackground();\r\n            }\r\n            else{\r\n                changeBackground();\r\n            }\r\n        console.log(check)\r\n\r\n    }\r\n    //const memor= useMemo(() => isCheckedFunc, [changeBackground]);\r\n\r\n    return(\r\n        <div id=\"bgr\" className={main.container}>\r\n            <div className=\"switchWrapper\">\r\n                <label className=\"switch\">\r\n                    <input className=\"elem\" type=\"checkbox\" onChange={isCheckedFunc}/>\r\n                    <span className=\"slider\"/>\r\n                </label>\r\n            </div>\r\n            <h2>Kanban</h2>\r\n            <div className={main.inputWrapper}>\r\n                <input type=\"text\"\r\n                       name=\"text\"\r\n                       onChange={changeInput}\r\n                        value={input.text}\r\n                       placeholder={'add new task'}\r\n                />\r\n                <Button text={\"Add\"} clickFunc={addNoteFunc}  nameOfClass={'inputButton'}/>\r\n            </div>\r\n            <div className={main.wrapper}>\r\n                <Todolist/>\r\n                <Intheprocess/>\r\n                <Whichisdid/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst mapDispatchToProps={\r\n    createPost\r\n}\r\nexport default connect(null, mapDispatchToProps)(Main);","import Main from \"./components/main\";\nimport Todolist from \"./components/toDo\";\n\nfunction App() {\n  return (\n        <Main/>\n  );\n}\n\nexport default App;\n","import {CREATE_POST, DELETE_POST, DID_POSTS, MOVE_POST} from \"./types\";\r\nconst initialState={\r\n    id:0,\r\n    posts:[],\r\n    newPosts:[],\r\n    postsWhichIsDid:[]\r\n}\r\nexport const postReducer=(state=initialState,action)=>{\r\n    switch(action.type){\r\n        case CREATE_POST:\r\n            return {\r\n                ...state,\r\n                posts:[...state.posts, action.payload]}\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter((el)=>{\r\n                    return el.id!==action.payload\r\n                })\r\n            }\r\n        case MOVE_POST:\r\n            let elem=state.posts.find((item)=>{\r\n                return item.id===action.payload\r\n            })\r\n          return {\r\n              ...state,\r\n              newPosts: [...state.newPosts, elem],\r\n              posts: state.posts.filter((el)=>{\r\n                  return el.id!==action.payload\r\n              })\r\n          }\r\n        case DID_POSTS:\r\n            let did=state.newPosts.find((el)=>{\r\n                return el.id===action.payload\r\n            })\r\n            return{\r\n                ...state,\r\n                postsWhichIsDid: [...state.postsWhichIsDid, did],\r\n                newPosts: state.newPosts.filter((el)=>{\r\n                    return el.id!==action.payload\r\n                })\r\n            }\r\n\r\n        default: return state\r\n    }\r\n\r\n}\r\n","import {combineReducers} from \"redux\";\r\nimport {postReducer} from \"./postReducer\";\r\n\r\nexport const rootReducer=(combineReducers({\r\n        posts:postReducer\r\n    })\r\n)","import React from 'react';\nimport './style/card.css';\nimport './style/toDo.css';\n\nimport {render} from 'react-dom';\nimport App from './App';\nimport {createStore, compose} from \"redux\";\nimport {rootReducer} from \"./redux/rootReducer\";\nimport {Provider} from \"react-redux\";\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store=createStore(rootReducer, composeEnhancer());\nconst app=(\n    <Provider store={store}><App/></Provider>\n)\nrender(app,document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"main_container__l49_M\",\"inputWrapper\":\"main_inputWrapper__1dLTq\",\"wrapper\":\"main_wrapper__3aQdY\"};"],"sourceRoot":""}